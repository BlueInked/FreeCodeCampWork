Reverse a String:

function reverseString(str) {
  return str.split('').reverse().join('');
}

reverseString("hello");


Factorialize a Number:


function factorialize(num) {
  if (num === 0) { return 1; }
  return num * factorialize(num-1);
}

factorialize(5);


Check for Palindromes:

function palindrome(str) {
  return str.replace(/[\W_]/g, '').toLowerCase() ===
         str.replace(/[\W_]/g, '').toLowerCase().split('').reverse().join('');
} 

palindrome("eye");


Find the Longest Word in a String:


function findLongestWord(str) {
  var words = str.split(' ');
  var maxLength = 0;

  for (var i = 0; i < words.length; i++) {
    if (words[i].length > maxLength) {
      maxLength = words[i].length;
    }
  }

  return maxLength;
}

findLongestWord("The quick brown fox jumped over the lazy dog");


Title Case a Sentence:

function titleCase(str) {
 str = str.toLowerCase().split(' ');

  for(var i = 0; i < str.length; i++){
    str[i] = str[i].split('');
    str[i][0] = str[i][0].toUpperCase(); 
    str[i] = str[i].join('');
  }
  return str.join(' ');
}

titleCase("I'm a little tea pot");


Repeat a String:

function repeatStringNumTimes(str, num) {
  // repeat after me
  if (num > 0){
  return str.repeat(num);
} else {
  return "";
}
}
repeatStringNumTimes("abc", 3);


Truncate a String:


function truncateString(str, num) {
  // Clear out that junk in your trunk
 if (str.length > num && num > 3) {
    return str.slice(0, (num - 3)) + '...';
  } else if (str.length > num && num <= 3) {
    return str.slice(0, num) + '...';
  } else {
    return str;
  }

}
truncateString("A-tisket a-tasket A green and yellow basket", 11);


Confirm the Ending:

function confirmEnding(str, target) {
  // "Never give up and good luck will find you."
  // -- Falcor
  return str.substr(-target.length) === target;
}

confirmEnding("Bastian", "n");


Chunky Monkey:

function chunkArrayInGroups(arr, size) {
  // Break it up.
  var newArr = [];
  for (var n = 0; n < arr.length; n+=size) {
    newArr.push(arr.slice(n, n+size));
  }
  return newArr;
}

chunkArrayInGroups(["a", "b", "c", "d"], 2);


Slasher Flick:

function slasher(arr, howMany) {
  // it doesn't always pay to be first
  var arr2 = [];
  for (var s = 0; s < arr.length; s += howMany) {
    arr2 = arr.splice([howMany], arr.length);
  }
  return arr2;
}

slasher([1, 2, 3], 2);


Mutations:

function mutation(arr) {
  for (var d = 0; d < arr[1].length; d++){
    if (arr[0].toLowerCase().indexOf(arr[1][d].toLowerCase()) == -1)
      return false;
  }
 
  return true;
}
mutation(["hello", "hey"]);


Falsy Bouncer:

function bouncer(arr) {
  // Don't show a false ID to this bouncer.
  return arr.filter(Boolean);
}

bouncer([7, "ate", "", false, 9]);


