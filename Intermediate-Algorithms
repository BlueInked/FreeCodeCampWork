Sum All Numbers in an Array:

function sumAll(arr) {
  var min = Math.min(arr[0], arr[1]);
  var max = Math.max(arr[0], arr[1]);
  var addUp = 0;
  
  for (n = min; n <= max; n++){
    addUp +=n;
  }
  return addUp;
}

sumAll([1, 4]);


Two Diff Arrays:

function diffArray(arr1, arr2) {
return arr1.concat(arr2).filter //concat the two arrays
(item => !arr1.includes(item) || !arr2.includes(item)); 
  //filter out what is not (!) in arr1 or arr2...
  /* help with ES6 arrow functions on: 
  https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/ */
}

diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);


To Roman Numerals : 

function convertToRoman(num) {
  //arrays for Roman Numerals and Decimal Numbers. 
  /*4, 9, 40, 90, 400, 900, and 4000 are included because how the numerals change with these numbers */
 var decNum = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];
 var romNum = ["M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"];
 var toRom = "";
  
  //as i loops through until the number is at at the decimal number that it is  closest but not more than num.
  for( var i = 0; i < decNum.length; i++) {
    while (decNum[i] <= num) {
      toRom += romNum[i];
      num -= decNum[i];
    }
  }
 return toRom;
}

convertToRoman(36);


Where Art Thou :


function whatIsInAName(collection, source) {
  // What's in a name?
  var arr = [];
  // Only change code below this line
  
 var keys = Object.keys(source);
  // remove those that do not have the keys from source.
  arr = collection.filter(function(obj) {
    //Use method every() to check for every key from source.
    return keys.every(function(k) {
      // Check if the object has the property and the same value.
      return obj.hasOwnProperty(k) && obj[k] === source[k];
    });
  });
  
  // Only change code above this line
  
  return arr;
}

whatIsInAName([{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, { first: "Tybalt", last: "Capulet" }], { last: "Capulet" });


Search and Replace:

function myReplace(str, before, after) {
  var i = str.indexOf(before);
  if (str[i] === str[i].toUpperCase()) {
      after = after.charAt(0).toUpperCase() + after.slice(1);
  }
   str = str.replace(before, after);
  return str;
}

myReplace("A quick brown fox jumped over the lazy dog", "jumped", "leaped");


